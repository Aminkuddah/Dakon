/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dakon;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.Timer;

/**
 *
 * @author navalinovian
 */
public class DisplayDakon extends javax.swing.JFrame {

    private int pemainAcak;
    private int mulaiPlayerA1, mulaiPlayerA2, mulaiPlayerA3;

    private int sizePlayerA1, sizePlayerA2, sizePlayerA3,
            sizePlayerB1, sizePlayerB2, sizePlayerB3;

    private boolean statusPlayerA1, statusPlayerA2, statusPlayerA3,
            statusPlayerB1, statusPlayerB2, statusPlayerB3,
            statusScorelumbungA, statusScorelumbungB;

//    public int playerA1,playerA2,playerA3,playerB1,playerB2,playerB3;
    /**
     * Creates new form DisplayDakon
     */
    public DisplayDakon() {
        initComponents();
        setDisable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lumbungPlayerA = new javax.swing.JLabel();
        lumbungPlayerB = new javax.swing.JLabel();
        playerB3 = new javax.swing.JButton();
        playerA1 = new javax.swing.JButton();
        playerB2 = new javax.swing.JButton();
        playerA2 = new javax.swing.JButton();
        playerB1 = new javax.swing.JButton();
        playerA3 = new javax.swing.JButton();
        buttonAcak = new javax.swing.JButton();
        textPlayer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lumbungPlayerA.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lumbungPlayerA.setText("0");

        lumbungPlayerB.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        lumbungPlayerB.setText("0");

        playerB3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        playerB3.setText("3");
        playerB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerB3ActionPerformed(evt);
            }
        });

        playerA1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        playerA1.setText("3");
        playerA1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerA1ActionPerformed(evt);
            }
        });

        playerB2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        playerB2.setText("3");
        playerB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerB2ActionPerformed(evt);
            }
        });

        playerA2.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        playerA2.setText("3");
        playerA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerA2ActionPerformed(evt);
            }
        });

        playerB1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        playerB1.setText("3");
        playerB1.setToolTipText("");
        playerB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerB1ActionPerformed(evt);
            }
        });

        playerA3.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        playerA3.setText("3");
        playerA3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerA3ActionPerformed(evt);
            }
        });

        buttonAcak.setText("Acak");
        buttonAcak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAcakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lumbungPlayerA, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lumbungPlayerB, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(playerB3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerA1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(142, 142, 142)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playerB2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerA2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(playerB1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                    .addComponent(playerA3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(108, 108, 108))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonAcak)
                .addGap(28, 28, 28)
                .addComponent(textPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(playerB3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(playerB2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(playerB1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lumbungPlayerB, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lumbungPlayerA, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerA1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerA2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(playerA3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAcak)
                    .addComponent(textPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void setTrue() {
        statusPlayerA1 = true;
        statusPlayerA2 = true;
        statusPlayerA3 = true;

        statusPlayerB1 = true;
        statusPlayerB2 = true;
        statusPlayerB3 = true;

    }

    private void setDisable() {
        playerA1.setEnabled(false);
        playerA2.setEnabled(false);
        playerA3.setEnabled(false);

        playerB1.setEnabled(false);
        playerB2.setEnabled(false);
        playerB3.setEnabled(false);
    }

    private void playerA1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerA1ActionPerformed

        int angka, kasus;
        boolean playerA = true;
        angka = Integer.parseInt(this.playerA1.getText());
        playerA1.setText("0");
        kasus = 8;
        run(kasus, angka, playerA);


    }//GEN-LAST:event_playerA1ActionPerformed

    private void playerB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerB3ActionPerformed
        int angka, kasus, temp;
        boolean playerA = false;
        angka = Integer.parseInt(this.playerB3.getText());
        playerB3.setText("0");
        kasus = 2;
        run(kasus, angka, playerA);
    }//GEN-LAST:event_playerB3ActionPerformed

    private void playerB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerB2ActionPerformed
        int angka, kasus;
        boolean playerA = false;
        angka = Integer.parseInt(this.playerB2.getText());
        playerB2.setText("0");
        kasus = 3;
        run(kasus, angka, playerA);
    }//GEN-LAST:event_playerB2ActionPerformed

    private void playerB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerB1ActionPerformed
        int angka, kasus;
        boolean playerA = false;
        angka = Integer.parseInt(this.playerB1.getText());
        playerB1.setText("0");
        kasus = 4;
        run(kasus, angka, playerA);

    }//GEN-LAST:event_playerB1ActionPerformed

    private void playerA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerA2ActionPerformed
        int angka, kasus;
        boolean playerA = true;
        angka = Integer.parseInt(this.playerA2.getText());
        playerA2.setText("0");
        kasus = 7;
        run(kasus, angka, playerA);
    }//GEN-LAST:event_playerA2ActionPerformed

    private void playerA3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerA3ActionPerformed
        int angka, kasus, temp;
        boolean playerA = true;
        angka = Integer.parseInt(this.playerA3.getText());
        playerA3.setText("0");
        kasus = 6;

        run(kasus, angka, playerA);

    }//GEN-LAST:event_playerA3ActionPerformed

    private void giliranPlayerB() {

        if (Integer.parseInt(this.playerA1.getText()) == 0 && Integer.parseInt(this.playerA2.getText()) == 0 && Integer.parseInt(this.playerA3.getText()) == 0
                && Integer.parseInt(this.playerB1.getText()) == 0 && Integer.parseInt(this.playerB2.getText()) == 0 && Integer.parseInt(this.playerB3.getText()) == 0) {
            if (Integer.parseInt(this.lumbungPlayerA.getText()) < Integer.parseInt(this.lumbungPlayerB.getText())) {
                textPlayer.setText("Player B adalah pemenang!");
            } else {
                textPlayer.setText("Player A adalah pemenang!");
            }
            playerA1.setEnabled(false);
            playerA2.setEnabled(false);
            playerA3.setEnabled(false);
            playerB1.setEnabled(false);
            playerB2.setEnabled(false);
            playerB3.setEnabled(false);
        } else {
            playerA1.setEnabled(false);
            playerA2.setEnabled(false);
            playerA3.setEnabled(false);
            playerB1.setEnabled(true);
            playerB2.setEnabled(true);
            playerB3.setEnabled(true);

            if (Integer.parseInt(this.playerB1.getText()) == 0 && Integer.parseInt(this.playerB2.getText()) == 0 && Integer.parseInt(this.playerB3.getText()) == 0) {
                giliranPlayerA();
            }
        }

    }

    private void giliranPlayerA() {

        if (Integer.parseInt(this.playerA1.getText()) == 0 && Integer.parseInt(this.playerA2.getText()) == 0 && Integer.parseInt(this.playerA3.getText()) == 0
                && Integer.parseInt(this.playerB1.getText()) == 0 && Integer.parseInt(this.playerB2.getText()) == 0 && Integer.parseInt(this.playerB3.getText()) == 0) {
            if (Integer.parseInt(this.lumbungPlayerA.getText()) < Integer.parseInt(this.lumbungPlayerB.getText())) {
                textPlayer.setText("Player B adalah pemenang!");
            } else {
                textPlayer.setText("Player A adalah pemenang!");
            }

            playerA1.setEnabled(false);
            playerA2.setEnabled(false);
            playerA3.setEnabled(false);
            playerB1.setEnabled(false);
            playerB2.setEnabled(false);
            playerB3.setEnabled(false);
        } else {
            playerA1.setEnabled(true);
            playerA2.setEnabled(true);
            playerA3.setEnabled(true);
            playerB1.setEnabled(false);
            playerB2.setEnabled(false);
            playerB3.setEnabled(false);
            if (Integer.parseInt(this.playerA1.getText()) == 0 && Integer.parseInt(this.playerA2.getText()) == 0 && Integer.parseInt(this.playerA3.getText()) == 0) {
                giliranPlayerB();
            }
        }
    }


    private void buttonAcakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAcakActionPerformed
        Random random = new Random();
        pemainAcak = random.nextInt(2);

        if (pemainAcak == 0) {
            textPlayer.setText("Player A Main duluan!");
            giliranPlayerA();

        } else {
            textPlayer.setText("Player B Main duluan!");
            giliranPlayerB();

        }
        buttonAcak.setEnabled(false);
    }//GEN-LAST:event_buttonAcakActionPerformed

    private void run(int kasus, int angka, boolean playerA) {
        int temp;
        if (playerA) {

            while (angka != 0) {
                if (kasus == 8) {
                    kasus = 0;
                }
                if (kasus != 4) {
                    tambahDakon(kasus + 1);
                    angka--;
                }

                kasus++;
                if (angka == 0) {
                    temp = ambilDakon(kasus);

                    System.out.println("case : " + kasus);
                    if (temp != 1) {
                        angka = temp;
                    } else {
                        tembakDakon(kasus, playerA);
                        giliranPlayerB();
                    }
                }

            }
        } else {
            while (angka != 0) {
                if (kasus == 8) {
                    kasus = 0;
                }
                if (kasus != 0) {
                    System.out.println("angka :" + angka);

                    tambahDakon(kasus + 1);
                    angka--;
                }
                kasus++;
                if (angka == 0) {
                    temp = ambilDakon(kasus);
                    System.out.println("temporary : " + temp);
                    System.out.println("case : " + kasus);
                    if (temp != 1) {
                        angka = temp;
                    } else {
                        tembakDakon(kasus, playerA);
                        giliranPlayerA();
                    }
                }
            }
        }
    }

    private void toLumbungA(int angka) {
        int temp, total;
        temp = Integer.parseInt(this.lumbungPlayerA.getText());
        total = temp + angka;
        lumbungPlayerA.setText(Integer.toString(total));
    }

    private void toLumbungB(int angka) {
        int temp, total;
        temp = Integer.parseInt(this.lumbungPlayerB.getText());
        total = temp + angka;
        lumbungPlayerB.setText(Integer.toString(total));
    }

    private void tembakDakon(int kasus, boolean playerA) {
        int angka = 0;
        switch (kasus) {
            case 8:
                if (playerA) {
                    angka = Integer.parseInt(this.playerB3.getText());
                    toLumbungA(angka);
                    this.playerB3.setText("0");
                } else {
                }
                break;
            case 1:
                break;
            case 2:
                if (!playerA) {
                    angka = Integer.parseInt(this.playerA1.getText());
                    toLumbungB(angka);
                    this.playerA1.setText("0");
                } else {
                }
                break;
            case 3:
                if (!playerA) {
                    angka = Integer.parseInt(this.playerA2.getText());
                    toLumbungB(angka);
                    this.playerA2.setText("0");
                } else {
                }
                break;
            case 4:
                if (!playerA) {
                    angka = Integer.parseInt(this.playerA3.getText());
                    toLumbungB(angka);
                    this.playerA3.setText("0");
                } else {
                }
                break;
            case 5:
                break;
            case 6:
                if (playerA) {
                    angka = Integer.parseInt(this.playerB3.getText());
                    toLumbungA(angka);
                    this.playerB3.setText("0");
                } else {
                }
                break;
            case 7:
                if (playerA) {
                    angka = Integer.parseInt(this.playerB2.getText());
                    toLumbungA(angka);
                    this.playerB2.setText("0");
                } else {
                }
                break;
        }
    }

    private int ambilDakon(int kasus) {
        int angka = 0;
        switch (kasus) {
            case 1:
                angka = 0;
                break;
            case 2:
                angka = Integer.parseInt(this.playerB3.getText());
                if (angka == 1) {
                    playerB3.setText("1");
                } else {
                    playerB3.setText("0");
                }
                break;
            case 3:
                angka = Integer.parseInt(this.playerB2.getText());
                if (angka == 1) {
                    playerB2.setText("1");
                } else {
                    playerB2.setText("0");
                }
                break;
            case 4:
                angka = Integer.parseInt(this.playerB1.getText());
                if (angka == 1) {
                    playerB1.setText("1");
                } else {
                    playerB1.setText("0");
                }
                break;
            case 5:
                angka = 0;
                break;
            case 6:
                angka = Integer.parseInt(this.playerA3.getText());
                if (angka == 1) {
                    playerA3.setText("1");
                } else {
                    playerA3.setText("0");
                }
                break;
            case 7:
                angka = Integer.parseInt(this.playerA2.getText());
                if (angka == 1) {
                    playerA2.setText("1");
                } else {
                    playerA2.setText("0");
                }
                break;
            case 8:
                angka = Integer.parseInt(this.playerA1.getText());
                if (angka == 1) {
                    playerA1.setText("1");
                } else {
                    playerA1.setText("0");
                }
                break;
        }
        return angka;
    }

    private void tambahDakon(int next) {
        int lumbungB, lumbungA, isiB3, isiB2, isiB1, isiA1, isiA2, isiA3;
        lumbungA = Integer.parseInt(lumbungPlayerA.getText());
        lumbungB = Integer.parseInt(lumbungPlayerB.getText());
        isiB3 = Integer.parseInt(playerB3.getText());
        isiB2 = Integer.parseInt(playerB2.getText());
        isiB1 = Integer.parseInt(playerB1.getText());
        isiA3 = Integer.parseInt(playerA3.getText());
        isiA2 = Integer.parseInt(playerA2.getText());
        isiA1 = Integer.parseInt(playerA1.getText());

//        Timer time = new Timer(00, new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent ae) {
        switch (next) {
            case 1:
                lumbungPlayerA.setText(Integer.toString(lumbungA + 1));

                if (Integer.parseInt(playerA1.getText()) == 0 && Integer.parseInt(playerA2.getText()) == 0 && Integer.parseInt(playerA3.getText()) == 0) {
                    giliranPlayerB();
                }

                break;
            case 2:
                playerB3.setText(Integer.toString(isiB3 + 1));
                break;
            case 3:
                playerB2.setText(Integer.toString(isiB2 + 1));
                break;
            case 4:
                playerB1.setText(Integer.toString(isiB1 + 1));
                break;
            case 5:
                lumbungPlayerB.setText(Integer.toString(lumbungB + 1));
                if (Integer.parseInt(playerB1.getText()) == 0 && Integer.parseInt(playerB2.getText()) == 0 && Integer.parseInt(playerB3.getText()) == 0) {
                    giliranPlayerA();
                }

                break;
            case 6:
                playerA3.setText(Integer.toString(isiA3 + 1));
                break;
            case 7:
                playerA2.setText(Integer.toString(isiA2 + 1));
                break;
            case 8:
                playerA1.setText(Integer.toString(isiA1 + 1));
                break;

        }
//            }
//        });
//        time.start();
//        time.stop();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DisplayDakon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DisplayDakon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DisplayDakon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DisplayDakon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DisplayDakon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAcak;
    private javax.swing.JLabel lumbungPlayerA;
    private javax.swing.JLabel lumbungPlayerB;
    private javax.swing.JButton playerA1;
    private javax.swing.JButton playerA2;
    private javax.swing.JButton playerA3;
    private javax.swing.JButton playerB1;
    private javax.swing.JButton playerB2;
    private javax.swing.JButton playerB3;
    private javax.swing.JLabel textPlayer;
    // End of variables declaration//GEN-END:variables
}
